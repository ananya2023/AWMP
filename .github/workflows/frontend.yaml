name: Frontend Build and Deploy to GCP

on:
  push:
    branches: 
      - 'main'
    paths:
      - 'MealPlanner/**'
  workflow_dispatch: # Allows manual triggering of the workflow from the GitHub Actions tab

env:
  PROJECT_ID: ${{ vars.PROJECT_ID }}
  REGION: ${{ vars.REGION }}
  ARTIFACT_REGISTRY: ${{ vars.ARTIFACT_REGISTRY }}
  REPOSITORY: ${{ vars.REPOSITORY }}
  FRONTEND_SERVICE: ${{ vars.FRONTEND_SERVICE }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - uses: 'google-github-actions/auth@v3'
      with:
        credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}' # Replace with the name of your GitHub Actions secret

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v3
      with:
        project_id: ${{ env.PROJECT_ID }}

    - name: 'Use gcloud CLI'
      run: 'gcloud info'

    - name: Configure Docker for Artifact Registry
      run: |
        gcloud auth configure-docker ${{ env.ARTIFACT_REGISTRY }}

    - name: Get short commit SHA
      id: vars
      run: echo "SHORT_SHA=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and push
      uses: docker/build-push-action@v6
      with:
        context: ./MealPlanner
        push: true
        tags: ${{ env.ARTIFACT_REGISTRY }}/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/frontend-cooksy-v1:${{ steps.vars.outputs.SHORT_SHA }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        platforms: linux/amd64

    # - name: Build and Push Frontend Image
    #   run: |
    #     cd MealPlanner
    #     docker build -t ${{ env.ARTIFACT_REGISTRY }}/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/frontend-cooksy-v1:${{ steps.vars.outputs.SHORT_SHA }} .
    #     docker push ${{ env.ARTIFACT_REGISTRY }}/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/frontend-cooksy-v1:${{ steps.vars.outputs.SHORT_SHA }}

    - id: 'deploy'
      uses: 'google-github-actions/deploy-cloudrun@v3'
      with:
        service: ${{ env.FRONTEND_SERVICE }}
        image: '${{ env.ARTIFACT_REGISTRY }}/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/frontend-cooksy-v1:${{ steps.vars.outputs.SHORT_SHA }}'
        project_id: ${{ env.PROJECT_ID }}
        region: ${{ env.REGION }}
        

    - name: 'Use output'
      run: 'curl "${{ steps.deploy.outputs.url }}"'

    # - name: Deploy Frontend to Cloud Run
    #   run: |
    #     gcloud run deploy ${{ env.FRONTEND_SERVICE }} \
    #       --image=${{ env.ARTIFACT_REGISTRY }}/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/frontend-cooksy-v1:${{ steps.vars.outputs.SHORT_SHA }} \
    #       --region=${{ env.REGION }} \
    #       --platform=managed \
    #       --allow-unauthenticated \
    #       --port=5173

    # - name: Get Cloud Run URLs
    #   run: |
    #     echo "Frontend URL: $(gcloud run services describe ${{ env.FRONTEND_SERVICE }} --region=${{ env.REGION }} --format='value(status.url)')"