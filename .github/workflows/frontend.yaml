name: Build and Deploy to GCP

on:
  push:
    branches: [ main ]
  workflow_dispatch: # Allows manual triggering of the workflow from the GitHub Actions tab

env:
  PROJECT_ID: ${{ vars.PROJECT_ID }}
  REGION: ${{ vars.REGION }}
  ARTIFACT_REGISTRY: ${{ vars.ARTIFACT_REGISTRY }}
  REPOSITORY: ${{ vars.REPOSITORY }}
  BACKEND_SERVICE: ${{ vars.BACKEND_SERVICE }}
  FRONTEND_SERVICE: ${{ vars.FRONTEND_SERVICE }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - uses: 'google-github-actions/auth@v3'
      with:
        credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}' # Replace with the name of your GitHub Actions secret

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v3
      with:
        project_id: ${{ env.PROJECT_ID }}

    - name: 'Use gcloud CLI'
      run: 'gcloud info'

    - name: Configure Docker for Artifact Registry
      run: |
        gcloud auth configure-docker ${{ env.ARTIFACT_REGISTRY }}

    - name: Get short commit SHA
      id: vars
      run: echo "SHORT_SHA=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT

    - name: Build and Push Frontend Image
      run: |
        cd MealPlanner
        docker build -t ${{ env.ARTIFACT_REGISTRY }}/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/frontend-cooksy-v1:${{ steps.vars.outputs.SHORT_SHA }} .
        docker push ${{ env.ARTIFACT_REGISTRY }}/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/frontend-cooksy-v1:${{ steps.vars.outputs.SHORT_SHA }}

    - name: Deploy Frontend to Cloud Run
      run: |
        gcloud run deploy ${{ env.FRONTEND_SERVICE }} \
          --image=${{ env.ARTIFACT_REGISTRY }}/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/frontend-cooksy-v1:${{ steps.vars.outputs.SHORT_SHA }} \
          --region=${{ env.REGION }} \
          --platform=managed \
          --allow-unauthenticated \
          --port=5173

    - name: Get Cloud Run URLs
      run: |
        echo "Frontend URL: $(gcloud run services describe ${{ env.FRONTEND_SERVICE }} --region=${{ env.REGION }} --format='value(status.url)')"